version: "3"

services:
  app:
    profiles: ["app"]
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - 8000:8000
    env_file:
      - ./secrets/.env
    volumes:
      - .:/code
      - python-packages:/usr/local/lib/python3.11/site-packages
      - python-bin:/usr/local/bin
    command: /bin/bash scripts/start-dev.sh

  redis:
    container_name: redis
    restart: always
    image: redis:7.2.4-alpine
    ports:
      - 6379:6379

  zookeeper:
    container_name: zookeeper
    restart: always
    image: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    container_name: kafka1
    restart: always
    image: wurstmeister/kafka
    ports:
      - "9091:9091"
    environment:
      KAFKA_CREATE_TOPICS: "trade:10:3"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: CLIENT://:29091,EXTERNAL://:9091
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka1:29091,EXTERNAL://localhost:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    depends_on:
      - zookeeper

  kafka2:
    container_name: kafka2
    restart: always
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "trade:10:3"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: CLIENT://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka2:29092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    depends_on:
      - zookeeper

  kafka3:
    container_name: kafka3
    restart: always
    image: wurstmeister/kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_CREATE_TOPICS: "trade:10:3"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: CLIENT://:29093,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka3:29093,EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    restart: always
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka1
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091
      KAFKA_CLUSTERS_1_NAME: kafka2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka2:29092
      KAFKA_CLUSTERS_2_NAME: kafka3
      KAFKA_CLUSTERS_2_BOOTSTRAPSERVERS: kafka3:29093
    depends_on:
      - kafka1
      - kafka2
      - kafka3

volumes:
  python-packages:
  python-bin:

